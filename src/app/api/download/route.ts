import path from 'path';

// Load environment variables from .env.local for development
import dotenv from 'dotenv';
dotenv.config({ path: path.resolve(process.cwd(), '.env.local') });

const R2_ACCESS_KEY_ID = process.env.R2_ACCESS_KEY_ID;
const R2_SECRET_ACCESS_KEY = process.env.R2_SECRET_ACCESS_KEY;
const R2_ENDPOINT = process.env.R2_ENDPOINT;
// The bucket name will come from the query parameters, but you might have a default or want to validate against a list.
// For now, we assume the bucket provided in the query is the one to use.

if (!R2_ACCESS_KEY_ID || !R2_SECRET_ACCESS_KEY || !R2_ENDPOINT) {
  console.error("R2 credentials or endpoint are not configured in environment variables.");
  // Optionally, throw an error or handle this state, 
  // but for now, requests will fail if S3 client can't be initialized.
}

// Static mock download endpoint
export async function GET(request: Request) {
  const url = new URL(request.url);
  const format = url.searchParams.get('format') || 'md';
  
  // Create mock content based on the format
  let content = '';
  let filename = '';
  
  if (format === 'zip') {
    // For ZIP, return a simple text file (since we can't create real ZIP files here)
    content = 'This is a mock ZIP file content. In a real implementation, this would be binary data.';
    filename = 'mock-documentation.zip';
  } else {
    // For MD file, return some markdown content
    content = `# Mock Documentation
    
## Introduction

This is a mock Markdown file generated by OmniDocs Converter.

## Features

- Easy documentation conversion
- Support for multiple formats
- Automatic crawling of documentation sites

## Usage

See the [documentation](https://example.com/docs) for more information.
`;
    filename = 'all_docs.md';
  }
  
  // Set appropriate headers
  const headers = new Headers({
    'Content-Type': format === 'zip' ? 'application/zip' : 'text/markdown',
    'Content-Disposition': `attachment; filename="${filename}"`,
  });
  
  return new Response(content, { headers });
} 